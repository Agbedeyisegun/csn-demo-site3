
name: deploy-website on aws with github actions self runner

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: porject Init
        run: echo "This is a test"



  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout Current Directory
        run: pwd

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER

      - name: Check Docker version
        run: sudo docker --version

      - name: Check running Docker containers
        run: sudo docker container ls

      - name: Stop running Docker container
        run: sudo docker container stop csn-nginx || true

      - name: Delete running Docker container
        run: sudo docker container rm csn-nginx || true

      - name: Docker build image to start container
        run: sudo docker build -t csn-nginx .

      - name: Check built Docker images
        run: sudo docker images
      
     #- name: delete used Docker images
     # run: sudo docker image rm

      - name: Create and start Docker container
        run: sudo docker container run --name csn-nginx -p 8080:80 -d csn-nginx

      - name: Check running Docker containers again
        run: sudo docker container ls

      - name: Get logs from the Nginx container
        run: sudo docker logs csn-nginx
      
      - name: list the content of html file
        run: sudo docker container exec csn-nginx ls /usr/share/nginx/html/
      
      - name: to check the Nginx container if the index file is install
        run: sudo docker container exec csn-nginx cat /usr/share/nginx/html/index.html
  scan:
    - runs-on: self-hosted
      need: deploy
      steps:
        - name: checkout repository
          uses: actions/checkout@v4
        
        - name: install Arachni
          run: |
            sudo apt update
            sudo apt install -y arachni

        - name: Arachni Dast Scan 
          run: |
            arachni https://Agbedeyisegun.github.io/csn-demo-site/ ---report-save-path=output.afr


